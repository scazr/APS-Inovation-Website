<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>APS GPLO</title>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="form-section-style.css">

</head>
<body>
    <form action="/submit-form" method="post" enctype="multipart/form-data">
        <fieldset class="occupation-fieldset" required>
            <!-- <legend>Selecione seu gênero<span class="asterisk">*</span></legend> -->

            <label for="developer">
                <input type="radio" id="developer" name="occupation-option" value="developer"/>
                <span>Desenvolvedor</span>
            </label>
            
            <label for="data-scientist">
                <input type="radio" id="data-scientist" name="occupation-option" value="data-scientist"/>
                <span>Cientista de Dados</span>
            </label>
            
            <label for="production-engineer">
                <input type="radio" id="production-engineer" name="occupation-option" value="production-engineer"/>
                <span>Engenheiro de Produção</span>
            </label>
            
            <label for="marketing">
                <input type="radio" id="marketing" name="occupation-option" value="marketing"/>
                <span>Marketing</span>
            </label>
            
            <label for="apprentice">
                <input type="radio" id="apprentice" name="occupation-option" value="apprentice"/>
                <span>Aprendiz</span>
            </label>
        </fieldset>

        <div class="profile-field">
            <label for="name">Nome<span class="asterisk">*</span></label>
            <input type="text" id="name" name="name"/>
            
            <label for="email">E-mail<span class="asterisk">*</span></label>
            <input type="email" id="email" name="email"/>
            
            <div class="tel-fields">
                <div class="tel-field">
                    <label for="primaryPhone">Telefone<span class="asterisk">*</span></label>
                    <div class="field-margin"></div>
                    <input type="tel" id="primaryPhone" name="primaryPhone"/>
                </div>
                
                <div class="tel-field">
                    <label for="secondaryPhone">2º Telefone</label>
                    <div class="field-margin"></div>
                    <input type="tel" id="secondaryPhone" name="secondaryPhone"/>
                </div>
            </div>
            
            <div class="date-fields">
                <div class="date-field">
                    <label for="dateOfBirth">Nascido em<span class="asterisk">*</span></label>
                    <div class="field-margin"></div>
                    <input type="date" id="dateOfBirth" name="dateOfBirth"/>
                </div>
                
                <div class="date-field">
                    <label for="yearOfConclusion">Conclui curso em<span class="asterisk">*</span></label>
                    <div class="field-margin"></div>
                    <input type="date" id="yearOfConclusion" name="yearOfConclusion"/>
                </div> 
            </div>
            
            <label for="college">Faculdade cursada<span class="asterisk">*</span></label>
            <input type="text" id="college" name="college"/>
            
            <label class="resume" for="resume">Currículo (PDF)<span class="asterisk">*</span></label>
            <input type="file" id="resume" name="resume"/>

            <button type="submit">Enviar</button>
        </div>
    </form>
    <div class="background-overlay"></div>

</body>
<script>
    document.querySelector('form').addEventListener('submit', async function (event) {
        event.preventDefault();

        // const form = e.target;
        const formData = new FormData(event.target);

        try {
            const response = await fetch('/submit-form', {
                method: 'POST',
                body: formData
            });

            if (!response.ok) {
                const result = await response.json();
                alert(JSON.stringify(result.errors));
                displayErrors(result.errors);
            } else {
                alert('Form submitted successfully!');
                event.target.reset();
            }
        } catch (err) {
            console.error('Error submitting the form:', err);
        }
    });

    function displayErrors(errors) {
        document.querySelectorAll('.error-message')

        errors.forEach(error => {
            const field = document.querySelector(`[name="${error.field}"]`);
            if (field) {
                const errorMessage = document.createElement('span');
                errorMessage.classList.add('error-message');
                errorMessage.style.color = 'red';
                errorMessage.textContent = error.message;

                field.parentNode.insertBefore(errorMessage, field.nextSibling);
            }
        });
    }
</script>
<style>
    .error-message {
  font-size: 0.875em;
  color: red;
  margin-top: 5px;
}

</style>
</html>