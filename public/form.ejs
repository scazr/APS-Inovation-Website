<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>APS GPLO</title>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="form-section-style.css">
    <!-- <link rel="stylesheet" href="form-section-occu pation-style.css"> -->
    <link rel="stylesheet" href="form-section-profile-style.css">

</head>
<body>
    <form action="/submit-form" method="post" enctype="multipart/form-data">


        <fieldset class="profile-field">
            <div class="field-line name-fields">

                <label class="name" for="name">
                    <p>Nome<span class="asterisk">*</span></p>
                    <input type="text" id="name" name="name" autocomplete="given-name"/>
                </label>

                <label class="surname" for="surname">
                    <p>Sobrenome<span class="asterisk">*</span></p>
                    <input type="text" id="surname" name="surname" autocomplete="family-name"/>
                </label>
            </div>
            
        <label class="field-line email" for="email">
            <p>E-mail<span class="asterisk">*</span></p>
            <input type="email" id="email" name="email" autocomplete="email"/>
        </label>
            

            <div class="field-line tel-fields">
                <label for="primaryPhone">
                    <p>Telefone<span class="asterisk">*</span></p>
                    <input type="tel" id="primaryPhone" name="primaryPhone" autocomplete="tel"/>
                </label>
                
                <label for="secondaryPhone">
                    <p>2º Telefone</p>
                    <input type="tel" id="secondaryPhone" name="secondaryPhone" autocomplete="tel"/>
                </label>
            </div>
            
            <div class="field-line date-fields">
                <label for="dateOfBirth">
                    <p>Nascido em<span class="asterisk">*</span></p>
                    <input type="date" id="dateOfBirth" name="dateOfBirth" autocomplete="bday"/>
                </label>
                
                <label for="yearOfConclusion">
                    <p>Conclui curso em<span class="asterisk">*</span></p>
                    <div class="field-margin"></div>
                    <input type="date" id="yearOfConclusion" name="yearOfConclusion"/>
                </label>
            </div>
            
            <label for="occupation" class="field-line cars">
                <p>Selecione uma vaga<span class="asterisk">*</span></p>
                <select name="occupation" id="occupation" autocomplete="off">
                    <option value="">Selecione uma opção</option>
                    <option value="developer">Desenvolvedor</option>
                    <option value="data-scientist">Cientista de Dados</option>
                    <option value="production-engineer">Engenheiro de Produção</option>
                    <option value="marketing">Marketing</option>
                    <option value="apprentice">Aprendiz</option>
                </select>
            </label>
                
            <label class="field-line college" for="college">
                <p>Faculdade cursada<span class="asterisk">*</span></p>
                <input type="text" id="college" name="college"/>
            </label>
            
            <label class="field-line resume" for="resume">
                <p>Currículo (PDF)<span class="asterisk">*</span></p>
                <input type="file" id="resume" name="resume"/>
            </label>
            <button type="submit">Enviar</button>
            
        </fieldset>
    </form>
    <div class="background-overlay"></div>

</body>
<script>
    document.querySelector('form').addEventListener('submit', async function (event) {
        event.preventDefault();

        const formData = new FormData(event.target);

        try {
            const response = await fetch('/submit-form', {
                method: 'POST',
                body: formData
            });

            if (!response.ok) {
                const result = await response.json();
                // alert('Form submission failed. Please check the form for errors.');
                
                if (response.status == 429) alert(result.error);
                else displayErrors(result.errors);
                alert(JSON.stringify(result.errors));
                
            } else {
                alert('Form submitted successfully!');
                event.target.reset();
            }
        } catch (err) {
            console.error('Error submitting the form:', err);
        }
    });

    function displayErrors(errors) {
        // Remove all existing error messages
        document.querySelectorAll('.error-message').forEach(error => error.remove());
        console.log(errors);
        errors.forEach(error => {
            const field = document.querySelector(`label[for="${error.field}"]`);

            if (field) {
                console.log(field);
                let errorMessage = field.querySelector('.error-field');
                
                
                errorMessage = document.createElement('div');
                errorMessage.classList.add('error-message');
                    

                const inputField = field.querySelector('input, textarea, select');
                
                inputField.parentNode.appendChild(errorMessage);
            
                errorMessage.textContent = `- ${error.message}`; // Update message text
            }
        });
    }

</script>
<style>

    .error-message {
        font-size: 0.8em;
        color: red;
        margin-top: 0;
        font-weight: bold;
        width: 100%;
    }

</style>
</html>